#
# .vpkg
#

url() {
  #echo "https://github.com/jessetane/ubuntu-ec2-consistent-snapshot"
  echo "file:///Users/jessetane/Dropbox/software/src/ubuntu-ec2-consistent-snapshot"
}

version() {
  echo "stable"
}

build() {
  
  # files
  template="$lib"/"$build"/src/snapshot_template
  generated="$lib"/"$build"/bin/snapshot
  
  # get vars from stdin, even when piped to
  {
    read -a AWS_KEY -p "enter your Access Key ID: "
    read -a AWS_SECRET -p "enter your Secret Access Key: "
    read -a EBS_VOLUME -p "enter the EBS Volume to snapshot: "
    read -a REGION -p "enter an AWS Region: "
  }
  
  # generated script from the template
  mkdir -p "$lib"/"$build"/bin
  head -n 5 "$template" > "$generated"
  echo "AWS_KEY=\"$AWS_KEY\"" >> "$generated"
  echo "AWS_SECRET=\"$AWS_SECRET\"" >> "$generated"
  echo "EBS_VOLUME=\"$EBS_VOLUME\"" >> "$generated"
  echo "REGION=\"$REGION\"" >> "$generated"
  tail -n +11 "$template" >> "$generated"
  
  # make the script executable
  chmod +x "$generated"
}

install() {
  mkdir -p "$src" && cd $_
  
  # get repo
  [ ! -d .git ] && git clone "$(url)" ./
  
  # checkout code
  git fetch --all
  git fetch --tags
  
  # install
  mkdir -p "$lib"/"$build" && cd $_
  cp -R "$src"/.git ./
  git reset --hard "$version"
  
  # build executable from template
  build
  
  # dpkg deps
  if ! dpkg -L ec2-consistent-snapshot
  then
    sudo add-apt-repository ppa:alestic -y
    sudo apt-get update -y
    sudo apt-get install ec2-consistent-snapshot -y
  fi
  
  # cron
  #sudo ln -sf "$lib"/"$build"/bin/snapshot /etc/cron.daily/snapshot-"$build"
}

# uninstall() {
#   
#   # cron
#   sudo rm -rf /etc/cron.daily/snapshot-"$build"
# }

# stay safe
set -e

# run
"$1"
